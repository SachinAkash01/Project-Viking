package ui;

import main.Game;
import utilz.LoadSave;
import utilz.DatabaseConnection;

import javax.swing.*;

import java.awt.event.*;
import java.awt.image.BufferedImage;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.Statement;

public class LoginUI extends JFrame {
	private static final long serialVersionUID = -6921462126880570161L;
	
//	private BufferedImage backgroundImg;
//	private int menuX, menuY, menuWidth, menuHeight;

	JButton blogin = new JButton("Login");
	JPanel panel = new JPanel();
	JTextField txtuser = new JTextField(15);
	JPasswordField pass = new JPasswordField(15);
	
	public static void main(String[] args) {
		new LoginUI();
	}

	public LoginUI() {
		super("Login Autentification");
		setSize(1248, 672);
		setLocation(500, 280);
		panel.setLayout(null);

		txtuser.setBounds(530, 200, 200, 25);
		pass.setBounds(530, 250, 200, 25);
		blogin.setBounds(590, 300, 80, 20);

		panel.add(blogin);
		panel.add(txtuser);
		panel.add(pass);

		setLocationRelativeTo(null);
		getContentPane().add(panel);
		setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		setResizable(false);
		setVisible(true);
		actionlogin();
//		loadBackground();
	}
	
//	private void loadBackground() {
//		backgroundImg = LoadSave.GetSpriteAtlas(LoadSave.LOGIN_BACKGROUND);
//		menuWidth = (int) (backgroundImg.getWidth() * Game.SCALE);
//		menuHeight = (int) (backgroundImg.getHeight() * Game.SCALE);
//		menuX = Game.GAME_WIDTH / 2 - menuWidth / 2;
//		menuY = (int) (25 * Game.SCALE);
//	}
	
	public void validateUserCredentials() {
		String email = txtuser.getText();
		String password = pass.getText();
		
		try {
            Connection con = DatabaseConnection.getConnection();
            PreparedStatement pst = con.prepareStatement("select * from users where email = ? and password = ?");
            pst.setString(1, email);
            pst.setString(2, password);
            ResultSet rs = pst.executeQuery();
            
            if (rs.next()){
                Statement st = con.createStatement();
                ResultSet rs1 = st.executeQuery("select position from users where username = '" + email + "' and password = '"+ password +"'");
                rs1.next();
                String uname = rs1.getString("position");

                if (uname.equals("Admin")) {
                    tempPosition = "Admin";
                    DashboardUI ui = new DashboardUI();
                    ui.setVisible(true);
                    dispose();
                } else if (uname.equals("Manager")){
                    tempPosition = "Manager";
                    DashboardUIManager ui = new DashboardUIManager();
                    ui.setVisible(true);
                    dispose();
                } else if (uname.equals("Employee")){
                    tempPosition = "Employee";
                    DashboardUIEmployee ui = new DashboardUIEmployee();
                    ui.setVisible(true);
                    dispose();
                } 
            }
            else {
                JOptionPane.showMessageDialog(this, "Incorrect Username or Password!");
            }
            
        } catch (Exception e) {
            e.printStackTrace();
        }
	}

	public void actionlogin() {
		blogin.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent ae) {
				String puname = txtuser.getText();
				String ppaswd = String.valueOf(pass.getPassword()); // https://stackoverflow.com/questions/10443308/why-gettext-in-jpasswordfield-was-deprecated
				if( ldata.checkPassword(puname, ppaswd)) { 
					new Game();
					dispose();
				} else {

					JOptionPane.showMessageDialog(null, "Wrong Password / Username");
					txtuser.setText("");
					pass.setText("");
					txtuser.requestFocus();
				}

			}
		});
	}
}
