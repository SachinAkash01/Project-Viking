package ui;

import main.Game;
import utilz.DatabaseConnection;

import javax.swing.*;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;

public class LoginUI extends JFrame {
    private static final long serialVersionUID = -6921462126880570161L;

    JButton blogin = new JButton("Login");
    JButton bregister = new JButton("Register");
    JPanel panel = new JPanel();
    JTextField txtuser = new JTextField(15);
    JPasswordField pass = new JPasswordField(15);
    JLabel emailText = new JLabel("Email:");
    JLabel passwordText = new JLabel("Password:");
    JLabel loginLabel = new JLabel("Login Here..");

    public static String userSession;

    public static void main(String[] args) {
        new LoginUI();
    }

    public LoginUI() {
    	setSize(1248, 672);
        setLocationRelativeTo(null);
        setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        setTitle("Login UI");

        panel.setLayout(new GridLayout(5, 1, 10, 10));
        panel.setBorder(BorderFactory.createEmptyBorder(10, 10, 10, 10));

        loginLabel.setHorizontalAlignment(SwingConstants.CENTER);
        panel.add(loginLabel);

        panel.add(createFieldPanel(emailText, txtuser));
        panel.add(createFieldPanel(passwordText, pass));

        customizeButton(blogin);
        customizeButton(bregister);

        panel.add(blogin);
        panel.add(bregister);

        add(panel);
        setResizable(false);
        setVisible(true);
        actionLogin();
        actionRegister();
    }

    private JPanel createFieldPanel(JLabel label, JTextField field) {
        JPanel fieldPanel = new JPanel(new BorderLayout(5, 5));
        fieldPanel.add(label, BorderLayout.WEST);
        fieldPanel.add(field, BorderLayout.CENTER);
        return fieldPanel;
    }

    private void customizeButton(JButton button) {
        button.setBackground(new Color(30, 144, 255));
        button.setForeground(Color.WHITE);
        button.setFocusPainted(false);
        button.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                button.setBackground(new Color(70, 130, 180));
            }

            public void mouseExited(java.awt.event.MouseEvent evt) {
                button.setBackground(new Color(30, 144, 255));
            }
        });
    }

    public void validateUserCredentials() {
        String email = txtuser.getText();
        String password = new String(pass.getPassword());

        try {
            Connection con = DatabaseConnection.getConnection();
            PreparedStatement pst = con.prepareStatement("select * from users where email = ? and password = ?");
            pst.setString(1, email);
            pst.setString(2, password);
            ResultSet rs = pst.executeQuery();

            if (rs.next()) {
                setUserSession(email);
                new Game();
                dispose();
            } else {
                JOptionPane.showMessageDialog(this, "Incorrect Username or Password!", "Login Failed", JOptionPane.ERROR_MESSAGE);
                txtuser.setText("");
                pass.setText("");
                txtuser.requestFocus();
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    public void setUserSession(String email) {
        userSession = email;
    }

    public String getUserSession() {
        return userSession;
    }

    public void removeUserSession() {
        userSession = null;
    }

    public void actionLogin() {
        blogin.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent actionEvent) {
                validateUserCredentials();
            }
        });
    }

    public void actionRegister() {
        bregister.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent actionEvent) {
                new RegisterUI();
                dispose();
            }
        });
    }
}
